---
import BaseLayout from '@layouts/BaseLayout.astro';
import Section from '@components/Section.astro';
import { getCollection } from 'astro:content';
import { marked } from 'marked';

export async function getStaticPaths() {
  const entries = await getCollection('projects');
  return entries.map((e) => ({ params: { slug: e.slug }, props: { entry: e } }));
}

const { entry } = Astro.props;
const { Content } = await entry.render();

// Helpers
const md = (s?: string) => (s ? marked.parse(s) : '');

// Data from front-matter (all optional)
const heroUrl       = entry.data.heroImage as string | undefined;
const heroCredit    = entry.data.heroCredit as string | undefined;
const heroCreditUrl = entry.data.heroCreditUrl as string | undefined;

// Layout selection with sensible default
type HeroLayout = 'standard' | 'aside' | 'wide' | 'banner' | 'none';
const heroLayout: HeroLayout =
  (entry.data.heroLayout as HeroLayout | undefined) ??
  (heroUrl ? 'standard' : 'none');

// Optional long details (markdown string in front-matter)
const longDetails   = entry.data.longDetails as string | undefined;

// Optional arrays
const links = (entry.data.links ?? []) as Array<{ label: string; url: string }>;
const files = (entry.data.files ?? []) as Array<{ label: string; file: string }>;
---

<BaseLayout
  title={`${entry.data.title} — SPARQ Projects`}
  description={entry.data.shortDescription}
>
  <Section id="project" title={entry.data.title} subtitle={entry.data.shortDescription}>

    {/* HERO — preset layouts */}
    {heroUrl && heroLayout !== 'none' && (
      <>
        {/* STANDARD: full-width within content container */}
        {heroLayout === 'standard' && (
          <figure class="mb-8">
            <img src={heroUrl} alt={entry.data.title} class="w-full rounded-2xl shadow-sm" loading="eager" />
            {(heroCredit || heroCreditUrl) && (
              <figcaption class="mt-2 text-sm text-neutral-600">
                Photo:{' '}
                {heroCreditUrl ? (
                  <a class="underline" href={heroCreditUrl} target="_blank" rel="noopener noreferrer">
                    {heroCredit ?? heroCreditUrl}
                  </a>
                ) : (
                  heroCredit
                )}
              </figcaption>
            )}
          </figure>
        )}

        {/* ASIDE: image floats right on large screens */}
        {heroLayout === 'aside' && (
          <figure class="mb-8 lg:float-right lg:w-1/2 lg:ml-8 lg:mb-4">
            <img src={heroUrl} alt={entry.data.title} class="w-full rounded-2xl shadow-sm" loading="eager" />
            {(heroCredit || heroCreditUrl) && (
              <figcaption class="mt-2 text-sm text-neutral-600">
                Photo:{' '}
                {heroCreditUrl ? (
                  <a class="underline" href={heroCreditUrl} target="_blank" rel="noopener noreferrer">
                    {heroCredit ?? heroCreditUrl}
                  </a>
                ) : (
                  heroCredit
                )}
              </figcaption>
            )}
          </figure>
        )}

        {/* WIDE: bleed to container edges */}
        {heroLayout === 'wide' && (
          <div class="-mx-4 sm:-mx-6 lg:-mx-24 mb-8">
            <img
              src={heroUrl}
              alt={entry.data.title}
              class="w-full max-h-[70vh] object-cover"
              loading="eager"
            />
            {(heroCredit || heroCreditUrl) && (
              <div class="mt-2 px-4 sm:px-6 lg:px-24 text-sm text-neutral-600">
                Photo:{' '}
                {heroCreditUrl ? (
                  <a class="underline" href={heroCreditUrl} target="_blank" rel="noopener noreferrer">
                    {heroCredit ?? heroCreditUrl}
                  </a>
                ) : (
                  heroCredit
                )}
              </div>
            )}
          </div>
        )}

        {/* BANNER: tall hero within container */}
        {heroLayout === 'banner' && (
          <figure class="mb-8">
            <div class="w-full h-[40vh] md:h-[50vh] lg:h-[60vh] overflow-hidden rounded-2xl shadow-sm">
              <img src={heroUrl} alt={entry.data.title} class="w-full h-full object-cover" loading="eager" />
            </div>
            {(heroCredit || heroCreditUrl) && (
              <figcaption class="mt-2 text-sm text-neutral-600">
                Photo:{' '}
                {heroCreditUrl ? (
                  <a class="underline" href={heroCreditUrl} target="_blank" rel="noopener noreferrer">
                    {heroCredit ?? heroCreditUrl}
                  </a>
                ) : (
                  heroCredit
                )}
              </figcaption>
            )}
          </figure>
        )}
      </>
    )}

    {/* Optional long details from front-matter (markdown string) */}
    {longDetails && (
      <div class="prose prose-neutral max-w-none" set:html={md(longDetails)}></div>
    )}

    {/* Markdown body from the .md/.mdx entry */}
    <article class="prose prose-neutral max-w-none mt-6">
      <Content />
    </article>

    {/* Clear float from "aside" layout */}
    {heroLayout === 'aside' && <div class="clear-both"></div>}

    {links.length > 0 && (
      <div class="mt-8">
        <h3 class="font-semibold mb-2">Links</h3>
        <ul class="list-disc pl-5">
          {links.map((l) => (
            <li>
              <a class="text-blue-700 underline" href={l.url} target="_blank" rel="noopener noreferrer">
                {l.label}
              </a>
            </li>
          ))}
        </ul>
      </div>
    )}

    {files.length > 0 && (
      <div class="mt-8">
        <h3 class="font-semibold mb-2">Downloads</h3>
        <ul class="list-disc pl-5">
          {files.map((f) => (
            <li>
              <a class="text-blue-700 underline" href={f.file} download>
                {f.label}
              </a>
            </li>
          ))}
        </ul>
      </div>
    )}
  </Section>
</BaseLayout>
