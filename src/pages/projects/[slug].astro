---
import BaseLayout from '@layouts/BaseLayout.astro';
import Section from '@components/Section.astro';
import { getCollection } from 'astro:content';
import { marked } from 'marked';

export async function getStaticPaths() {
  const entries = await getCollection('projects');
  return entries.map((e) => ({ params: { slug: e.slug }, props: { entry: e } }));
}

const { entry } = Astro.props;
const { Content } = await entry.render();

const md = (s?: string) => (s ? marked.parse(s) : '');

const heroUrl       = entry.data.heroImage as string | undefined;
const heroLayout    = (entry.data.heroLayout as string | undefined) ?? 'standard';
const heroFocal     = (entry.data.heroFocalPoint as string | undefined) ?? 'center';
const heroCaption   = entry.data.heroCaption as string | undefined;
const heroCredit    = entry.data.heroCredit as string | undefined;
const heroCreditUrl = entry.data.heroCreditUrl as string | undefined;

const files = (entry.data.files ?? []) as Array<{label:string,file:string}>;
const links = (entry.data.links ?? []) as Array<{label:string,url:string}>;
---

<BaseLayout title={`${entry.data.title} — SPARQ Team`}>
  <Section id="project" title={entry.data.title} subtitle={entry.data.shortDescription}>

    {heroUrl && heroLayout !== 'none' && (
      <>
        {/* STANDARD */}
        {heroLayout === 'standard' && (
          <figure class="mb-8">
            <img src={heroUrl} alt={entry.data.title} class="w-full rounded-2xl shadow-sm" loading="eager" />
            {(heroCredit || heroCreditUrl) && (
              <figcaption class="mt-2 text-sm text-neutral-600">
                Photo:{' '}
                {heroCreditUrl ? (
                  <a class="text-blue-700 underline" href={heroCreditUrl} target="_blank">{heroCredit || heroCreditUrl}</a>
                ) : (
                  heroCredit
                )}
              </figcaption>
            )}
            {heroCaption && <div class="text-sm text-neutral-700 mt-1">{heroCaption}</div>}
          </figure>
        )}

        {/* WIDE */}
        {heroLayout === 'wide' && (
          <figure class="mb-8 -mx-4 md:mx-0">
            <img src={heroUrl} alt={entry.data.title} class="w-[calc(100%+2rem)] md:w-full max-w-none rounded-none md:rounded-2xl object-cover" style={`object-position:${heroFocal}`} loading="eager" />
          </figure>
        )}

        {/* EDGE */}
        {heroLayout === 'edge' && (
          <figure class="mb-8">
            <img src={heroUrl} alt={entry.data.title} class="w-screen max-w-none relative left-1/2 right-1/2 -ml-[50vw] -mr-[50vw] object-cover" style={`object-position:${heroFocal}`} loading="eager" />
          </figure>
        )}

        {/* ✅ ASIDE — float right on md+ so the content wraps */}
        {heroLayout === 'aside' && (
          <figure class="mb-6 md:float-right md:ml-6 md:mb-6 md:w-[45%]">
            <img src={heroUrl} alt={entry.data.title} class="w-full rounded-2xl shadow-sm object-cover" style={`object-position:${heroFocal}`} loading="eager" />
            {(heroCredit || heroCreditUrl) && (
              <figcaption class="mt-2 text-sm text-neutral-600">
                Photo:{' '}
                {heroCreditUrl ? (
                  <a class="text-blue-700 underline" href={heroCreditUrl} target="_blank">{heroCredit || heroCreditUrl}</a>
                ) : (
                  heroCredit
                )}
              </figcaption>
            )}
            {heroCaption && <div class="text-sm text-neutral-700 mt-1">{heroCaption}</div>}
          </figure>
        )}
      </>
    )}

    {/* Long details markdown (optional) */}
    {entry.data.longDetails && (
      <div class="prose max-w-none" set:html={md(entry.data.longDetails)} />
    )}

    {/* Body content (optional) */}
    <article class="prose max-w-none">
      <Content />
    </article>

    {/* Clear float from 'aside' to not affect subsequent sections */}
    {heroLayout === 'aside' && <div class="clear-both"></div>}

    {/* LINKS */}
    {links.length > 0 && (
      <div class="mt-10">
        <h3 class="font-semibold mb-2">Links</h3>
        <ul class="list-disc pl-5">
          {links.map((l) => (
            <li><a class="text-blue-700 underline" href={l.url} target="_blank">{l.label}</a></li>
          ))}
        </ul>
      </div>
    )}

    {/* FILES */}
    {files.length > 0 && (
      <div class="mt-10">
        <h3 class="font-semibold mb-2">Downloads</h3>
        <ul class="list-disc pl-5">
          {files.map((f) => (
            <li><a class="text-blue-700 underline" href={f.file} download>{f.label}</a></li>
          ))}
        </ul>
      </div>
    )}

    {/* PARTNERS */}
    {Array.isArray(entry.data.partners) && entry.data.partners.length > 0 && (
      <div class="mt-10">
        <h3 class="font-semibold mb-3">Collaborators & partners</h3>
        {
          (await getCollection('partners'))
            .filter(p => entry.data.partners.includes(p.slug))
            .sort((a,b) => (a.data.order ?? 9999) - (b.data.order ?? 9999))
            .map(p => (
              <a href={p.data.url || '#'} target={p.data.url ? '_blank' : undefined} class="inline-flex items-center justify-center rounded-xl border border-neutral-200 bg-white h-16 w-40 mr-3 mb-3">
                {p.data.logo ? (
                  <img src={p.data.logo} alt={p.data.name} class="max-h-10 object-contain" loading="lazy" />
                ) : (
                  <span class="text-neutral-600 font-semibold">{p.data.name}</span>
                )}
              </a>
            ))
        }
      </div>
    )}
  </Section>
</BaseLayout>
