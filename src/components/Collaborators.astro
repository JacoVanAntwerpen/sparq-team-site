---
import { getCollection } from 'astro:content';

const partnersAll = (await getCollection('partners')).sort(
  (a, b) => (a.data.order ?? 9999) - (b.data.order ?? 9999)
);

/**
 * Grouping:
 * - Preferred: explicit `data.category` (enum: affiliations | universities | industry | government)
 * - Legacy fallback: if no category but `affiliate: true` => treat as "affiliations"
 * - Otherwise goes to `_other` (the unlabeled group at the end)
 */
const byCat = {
  affiliations: [],
  universities: [],
  industry: [],
  government: [],
  _other: [],
};

for (const p of partnersAll) {
  const cat = (p.data.category ?? null);
  if (cat && (cat === 'affiliations' || cat === 'universities' || cat === 'industry' || cat === 'government')) {
    byCat[cat].push(p);
  } else if (p.data.affiliate === true) {
    byCat.affiliations.push(p); // legacy mapping
  } else {
    byCat._other.push(p);
  }
}

// Maintain existing grid visuals
const gridClasses =
  "grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-6 gap-x-8 gap-y-10 place-items-center";
const boxClasses = "h-12 md:h-16 flex items-center justify-center";
const imgClasses = "h-full w-auto max-w-full object-contain";

// Render order + labels (matching your original “Affiliations” label style)
const groups = [
  { key: 'affiliations', label: 'Affiliations', items: byCat.affiliations },
  { key: 'universities', label: 'Universities & Institutions', items: byCat.universities },
  { key: 'industry', label: 'Industry', items: byCat.industry },
  { key: 'government', label: 'Government', items: byCat.government },
].filter(g => g.items.length > 0);
---

{groups.map((g, idx) => (
  <section>
    {/* Label + skinny line (exact style used before) */}
    <div class="mb-3 mt-1 flex items-center gap-3">
      <h3 class="text-xs font-semibold uppercase tracking-wide text-gray-600">{g.label}</h3>
      <div class="h-px flex-1 bg-gray-200"></div>
    </div>

    <div class={gridClasses}>
      {g.items.map((p) => (
        <div class={boxClasses}>
          {p.data.url ? (
            <a href={p.data.url} target="_blank" rel="noopener" aria-label={p.data.name}>
              <img src={p.data.logo} alt={p.data.name} loading="lazy" decoding="async" class={imgClasses} />
            </a>
          ) : (
            <img src={p.data.logo} alt={p.data.name} loading="lazy" decoding="async" class={imgClasses} />
          )}
        </div>
      ))}
    </div>

    {/* Divider after this group if more groups follow OR if there will be a final unlabeled block */}
    {(idx < groups.length - 1 || byCat._other.length) ? (
      <div class="my-8 h-px bg-gray-200"></div>
    ) : null}
  </section>
))}

{byCat._other.length ? (
  <section>
    {/* No label for the legacy unlabeled group, just like before */}
    <div class={gridClasses}>
      {byCat._other.map((p) => (
        <div class={boxClasses}>
          {p.data.url ? (
            <a href={p.data.url} target="_blank" rel="noopener" aria-label={p.data.name}>
              <img src={p.data.logo} alt={p.data.name} loading="lazy" decoding="async" class={imgClasses} />
            </a>
          ) : (
            <img src={p.data.logo} alt={p.data.name} loading="lazy" decoding="async" class={imgClasses} />
          )}
        </div>
      ))}
    </div>
  </section>
) : null}
