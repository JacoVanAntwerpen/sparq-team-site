---
import { getCollection } from 'astro:content';

const partnersAll = (await getCollection('partners')).sort(
  (a, b) => (a.data.order ?? 9999) - (b.data.order ?? 9999)
);

/**
 * Grouping:
 * - Preferred: explicit `data.category` (enum: affiliations | universities | industry | government)
 * - Legacy fallback: if no category but `affiliate: true` => treat as "affiliations"
 * - Otherwise goes to `_other` (the unlabeled group at the end)
 */
const byCat: Record<string, any[]> = {
  affiliations: [],
  universities: [],
  industry: [],
  government: [],
  _other: [],
};

for (const p of partnersAll) {
  const cat = (p.data.category ?? null) as string | null;
  if (cat && (cat === 'affiliations' || cat === 'universities' || cat === 'industry' || cat === 'government')) {
    byCat[cat].push(p);
  } else if (p.data.affiliate === true) {
    byCat.affiliations.push(p); // legacy mapping
  } else {
    byCat._other.push(p);
  }
}

// Maintain existing grid visuals
const gridClasses =
  "grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-6 gap-x-8 gap-y-10 place-items-center";
const boxClasses = "h-12 md:h-16 flex items-center justify-center";
const imgClasses = "h-full w-auto max-w-full object-contain";

// Render order: Affiliations → Universities & Institutions → Industry → Government
const groups: any[][] = [
  byCat.affiliations,
  byCat.universities,
  byCat.industry,
  byCat.government,
];
const nonEmptyGroups = groups.filter((g) => g.length > 0);
---

{nonEmptyGroups.map((items, idx) => (
  <section>
    <div class={gridClasses}>
      {items.map((p) => (
        <div class={boxClasses}>
          {p.data.url ? (
            <a href={p.data.url} target="_blank" rel="noopener" aria-label={p.data.name}>
              <img src={p.data.logo} alt={p.data.name} loading="lazy" decoding="async" class={imgClasses} />
            </a>
          ) : (
            <img src={p.data.logo} alt={p.data.name} loading="lazy" decoding="async" class={imgClasses} />
          )}
        </div>
      ))}
    </div>

    {/* Put a divider after this group only if there are more groups after it
        OR if there will be a final unlabeled (_other) block. */}
    {(idx < nonEmptyGroups.length - 1 || byCat._other.length) ? (
      <div class="my-8 h-px bg-gray-200"></div>
    ) : null}
  </section>
))}

{byCat._other.length ? (
  <section>
    <div class={gridClasses}>
      {byCat._other.map((p) => (
        <div class={boxClasses}>
          {p.data.url ? (
            <a href={p.data.url} target="_blank" rel="noopener" aria-label={p.data.name}>
              <img src={p.data.logo} alt={p.data.name} loading="lazy" decoding="async" class={imgClasses} />
            </a>
          ) : (
            <img src={p.data.logo} alt={p.data.name} loading="lazy" decoding="async" class={imgClasses} />
          )}
        </div>
      ))}
    </div>
  </section>
) : null}
